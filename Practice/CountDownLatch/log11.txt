ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v2,ReadHeap(v2)*10))|(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v2,ReadHeap(v2)*10))|(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v3,ReadHeap(v3)*10))|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v3,ReadHeap(v3)*10))|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|30|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v2,ReadHeap(v2)*10));(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v2,ReadHeap(v2)*10))|(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v2,ReadHeap(v2)*10))|(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(fork(WriteHeap(v3,ReadHeap(v3)*10));(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v3,ReadHeap(v3)*10))|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {fork(WriteHeap(v3,ReadHeap(v3)*10))|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|10|40|10|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newLatch(cnt,ReadHeap(v2));(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newLatch(cnt,ReadHeap(v2))|(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))));(await(cnt);(print(100);(countDown(cnt);print(100)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))))|(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);(print(100);(countDown(cnt);print(100))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(print(ReadHeap(v1));(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(countDown(cnt);fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {countDown(cnt)|fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {fork((WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(print(ReadHeap(v2));(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(countDown(cnt);fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {countDown(cnt)|fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {countDown(cnt)|fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {fork((WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {(WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {(WriteHeap(v3,ReadHeap(v3)*10);(print(ReadHeap(v3));countDown(cnt)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v3,ReadHeap(v3)*10)|(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {(print(ReadHeap(v3));countDown(cnt))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {print(ReadHeap(v3))|countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {countDown(cnt)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1000
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {await(cnt)|(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(print(100);(countDown(cnt);print(100)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {print(100)|(countDown(cnt);print(100))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {print(100)|(countDown(cnt);print(100))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(countDown(cnt);print(100))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {(countDown(cnt);print(100))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {countDown(cnt)|print(100)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {countDown(cnt)|print(100)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {print(100)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|1|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {print(100)|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|1|}
File table: 
Heap: {1->20, 2->30, 3->40, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {20|10|30|100|40|1000|100|1|100|}
File table: 
Heap: {1->20, 2->30, 3->40, }


