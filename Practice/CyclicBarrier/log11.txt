ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.NewBarrierStatement@165b5b95;(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.NewBarrierStatement@165b5b95|(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.NewBarrierStatement@165b5b95|(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(Model.Statements.AwaitStatement@4d7da2ec;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@4d7da2ec|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@4d7da2ec|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@8d6d1a6|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.AwaitStatement@575f6573;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@8d6d1a6|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(Model.Statements.AwaitStatement@49bd77af;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@575f6573|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@5de8ce24|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@49bd77af|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@575f6573|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@5de8ce24|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@49bd77af|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@4c80b099|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@41394420|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@4c80b099|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@41394420|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.NewBarrierStatement@d0939e6;(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.NewBarrierStatement@d0939e6|(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.NewBarrierStatement@d0939e6|(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(Model.Statements.AwaitStatement@26cb24c0;(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@26cb24c0|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@26cb24c0|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@259e350c|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(Model.Statements.AwaitStatement@86a0cb2;print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@259e350c|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(Model.Statements.AwaitStatement@576a1a23;(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@86a0cb2|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@4beeafe9|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@576a1a23|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@86a0cb2|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {Model.Statements.AwaitStatement@4beeafe9|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@576a1a23|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@7f5f0fa2|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@42b3ab43|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {Model.Statements.AwaitStatement@7f5f0fa2|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {Model.Statements.AwaitStatement@42b3ab43|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10000
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:1000
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10000
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10000
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10000
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10000
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:10000
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:10000
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:10000
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:1
ExecutionStack: {(Ref(int )v1;(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v1|(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v2;(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v2|(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(Ref(int )v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {Ref(int )v3|(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int cnt|(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {new(v1,2)|(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(0,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v2,3);(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {new(v2,3)|(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(0,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(new(v3,4);(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {new(v3,4)|(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(0,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(newBarrier(cnt,ReadHeap(v2));(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {newBarrier(cnt,ReadHeap(v2))|(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->0), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))));(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))))|(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))));(await(cnt);print(ReadHeap(v3))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(await(cnt);(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {fork((await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))))|(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {(await(cnt);print(ReadHeap(v3)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(await(cnt);(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {await(cnt)|(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {await(cnt)|print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {(WriteHeap(v1,ReadHeap(v1)*10);print(ReadHeap(v1)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {await(cnt)|(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {print(ReadHeap(v3))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {WriteHeap(v1,ReadHeap(v1)*10)|print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2))))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {}
File table: 
Heap: {1->2, 2->3, 3->4, }


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {print(ReadHeap(v1))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|}
File table: 
Heap: {1->20, 2->3, 3->4, }


ProgramState with id:10
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {(WriteHeap(v2,ReadHeap(v2)*10);print(ReadHeap(v2)))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {WriteHeap(v2,ReadHeap(v2)*10)|print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->30, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {print(ReadHeap(v2))|}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|}
File table: 
Heap: {1->20, 2->300, 3->4, }


ProgramState with id:100
ExecutionStack: {}
SymbolTable: (cnt->1), (v1->(1,int )), (v2->(2,int )), (v3->(3,int ))
Output: {4|20|300|}
File table: 
Heap: {1->20, 2->300, 3->4, }


