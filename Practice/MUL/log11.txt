ProgramState with id:1
ExecutionStack: {(int v1;(int v2;(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1==0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1==0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (v1->2), (v2->3)
Output: {2|}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v1;(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (v1->2), (v2->3)
Output: {1|}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v1;(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v1|(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: 
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(int v2;(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {int v2|(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v1 = 2;(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v1 = 2|(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->0), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {(v2 = 3;if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1))|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {v2 = 3|if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->0)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {if v1!=0 then print((v1*v2)-(v1+v2)) else print(v1)|}
SymbolTable: (v1->2), (v2->3)
Output: {}
File table: 
Heap: {}


ProgramState with id:1
ExecutionStack: {}
SymbolTable: (v1->2), (v2->3)
Output: {1|}
File table: 
Heap: {}


